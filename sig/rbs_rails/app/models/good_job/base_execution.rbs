module GoodJob
  class BaseExecution < ::GoodJob::BaseRecord
    extend _ActiveRecord_Relation_ClassMethods[GoodJob::BaseExecution, ActiveRecord_Relation, String]

    module GeneratedAttributeMethods
      def id: () -> String

      def id=: (String) -> String

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ String?, String? ]

      def id_will_change!: () -> void

      def id_was: () -> String?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> Array[String?]?

      def id_previously_was: () -> String?

      def id_before_last_save: () -> String?

      def id_change_to_be_saved: () -> Array[String?]?

      def id_in_database: () -> String?

      def saved_change_to_id: () -> Array[String?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def queue_name: () -> String?

      def queue_name=: (String?) -> String?

      def queue_name?: () -> bool

      def queue_name_changed?: () -> bool

      def queue_name_change: () -> [ String?, String? ]

      def queue_name_will_change!: () -> void

      def queue_name_was: () -> String?

      def queue_name_previously_changed?: () -> bool

      def queue_name_previous_change: () -> Array[String?]?

      def queue_name_previously_was: () -> String?

      def queue_name_before_last_save: () -> String?

      def queue_name_change_to_be_saved: () -> Array[String?]?

      def queue_name_in_database: () -> String?

      def saved_change_to_queue_name: () -> Array[String?]?

      def saved_change_to_queue_name?: () -> bool

      def will_save_change_to_queue_name?: () -> bool

      def restore_queue_name!: () -> void

      def clear_queue_name_change: () -> void

      def priority: () -> Integer?

      def priority=: (Integer?) -> Integer?

      def priority?: () -> bool

      def priority_changed?: () -> bool

      def priority_change: () -> [ Integer?, Integer? ]

      def priority_will_change!: () -> void

      def priority_was: () -> Integer?

      def priority_previously_changed?: () -> bool

      def priority_previous_change: () -> Array[Integer?]?

      def priority_previously_was: () -> Integer?

      def priority_before_last_save: () -> Integer?

      def priority_change_to_be_saved: () -> Array[Integer?]?

      def priority_in_database: () -> Integer?

      def saved_change_to_priority: () -> Array[Integer?]?

      def saved_change_to_priority?: () -> bool

      def will_save_change_to_priority?: () -> bool

      def restore_priority!: () -> void

      def clear_priority_change: () -> void

      def serialized_params: () -> untyped?

      def serialized_params=: (untyped?) -> untyped?

      def serialized_params?: () -> bool

      def serialized_params_changed?: () -> bool

      def serialized_params_change: () -> [ untyped?, untyped? ]

      def serialized_params_will_change!: () -> void

      def serialized_params_was: () -> untyped?

      def serialized_params_previously_changed?: () -> bool

      def serialized_params_previous_change: () -> Array[untyped?]?

      def serialized_params_previously_was: () -> untyped?

      def serialized_params_before_last_save: () -> untyped?

      def serialized_params_change_to_be_saved: () -> Array[untyped?]?

      def serialized_params_in_database: () -> untyped?

      def saved_change_to_serialized_params: () -> Array[untyped?]?

      def saved_change_to_serialized_params?: () -> bool

      def will_save_change_to_serialized_params?: () -> bool

      def restore_serialized_params!: () -> void

      def clear_serialized_params_change: () -> void

      def scheduled_at: () -> ActiveSupport::TimeWithZone?

      def scheduled_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

      def scheduled_at?: () -> bool

      def scheduled_at_changed?: () -> bool

      def scheduled_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def scheduled_at_will_change!: () -> void

      def scheduled_at_was: () -> ActiveSupport::TimeWithZone?

      def scheduled_at_previously_changed?: () -> bool

      def scheduled_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def scheduled_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def scheduled_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def scheduled_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def scheduled_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_scheduled_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_scheduled_at?: () -> bool

      def will_save_change_to_scheduled_at?: () -> bool

      def restore_scheduled_at!: () -> void

      def clear_scheduled_at_change: () -> void

      def performed_at: () -> ActiveSupport::TimeWithZone?

      def performed_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

      def performed_at?: () -> bool

      def performed_at_changed?: () -> bool

      def performed_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def performed_at_will_change!: () -> void

      def performed_at_was: () -> ActiveSupport::TimeWithZone?

      def performed_at_previously_changed?: () -> bool

      def performed_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def performed_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def performed_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def performed_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def performed_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_performed_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_performed_at?: () -> bool

      def will_save_change_to_performed_at?: () -> bool

      def restore_performed_at!: () -> void

      def clear_performed_at_change: () -> void

      def finished_at: () -> ActiveSupport::TimeWithZone?

      def finished_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

      def finished_at?: () -> bool

      def finished_at_changed?: () -> bool

      def finished_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def finished_at_will_change!: () -> void

      def finished_at_was: () -> ActiveSupport::TimeWithZone?

      def finished_at_previously_changed?: () -> bool

      def finished_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def finished_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def finished_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def finished_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def finished_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_finished_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_finished_at?: () -> bool

      def will_save_change_to_finished_at?: () -> bool

      def restore_finished_at!: () -> void

      def clear_finished_at_change: () -> void

      def error: () -> String?

      def error=: (String?) -> String?

      def error?: () -> bool

      def error_changed?: () -> bool

      def error_change: () -> [ String?, String? ]

      def error_will_change!: () -> void

      def error_was: () -> String?

      def error_previously_changed?: () -> bool

      def error_previous_change: () -> Array[String?]?

      def error_previously_was: () -> String?

      def error_before_last_save: () -> String?

      def error_change_to_be_saved: () -> Array[String?]?

      def error_in_database: () -> String?

      def saved_change_to_error: () -> Array[String?]?

      def saved_change_to_error?: () -> bool

      def will_save_change_to_error?: () -> bool

      def restore_error!: () -> void

      def clear_error_change: () -> void

      def created_at: () -> ActiveSupport::TimeWithZone

      def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def created_at?: () -> bool

      def created_at_changed?: () -> bool

      def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def created_at_will_change!: () -> void

      def created_at_was: () -> ActiveSupport::TimeWithZone?

      def created_at_previously_changed?: () -> bool

      def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_created_at?: () -> bool

      def will_save_change_to_created_at?: () -> bool

      def restore_created_at!: () -> void

      def clear_created_at_change: () -> void

      def updated_at: () -> ActiveSupport::TimeWithZone

      def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def updated_at?: () -> bool

      def updated_at_changed?: () -> bool

      def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def updated_at_will_change!: () -> void

      def updated_at_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_previously_changed?: () -> bool

      def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_updated_at?: () -> bool

      def will_save_change_to_updated_at?: () -> bool

      def restore_updated_at!: () -> void

      def clear_updated_at_change: () -> void

      def active_job_id: () -> String?

      def active_job_id=: (String?) -> String?

      def active_job_id?: () -> bool

      def active_job_id_changed?: () -> bool

      def active_job_id_change: () -> [ String?, String? ]

      def active_job_id_will_change!: () -> void

      def active_job_id_was: () -> String?

      def active_job_id_previously_changed?: () -> bool

      def active_job_id_previous_change: () -> Array[String?]?

      def active_job_id_previously_was: () -> String?

      def active_job_id_before_last_save: () -> String?

      def active_job_id_change_to_be_saved: () -> Array[String?]?

      def active_job_id_in_database: () -> String?

      def saved_change_to_active_job_id: () -> Array[String?]?

      def saved_change_to_active_job_id?: () -> bool

      def will_save_change_to_active_job_id?: () -> bool

      def restore_active_job_id!: () -> void

      def clear_active_job_id_change: () -> void

      def concurrency_key: () -> String?

      def concurrency_key=: (String?) -> String?

      def concurrency_key?: () -> bool

      def concurrency_key_changed?: () -> bool

      def concurrency_key_change: () -> [ String?, String? ]

      def concurrency_key_will_change!: () -> void

      def concurrency_key_was: () -> String?

      def concurrency_key_previously_changed?: () -> bool

      def concurrency_key_previous_change: () -> Array[String?]?

      def concurrency_key_previously_was: () -> String?

      def concurrency_key_before_last_save: () -> String?

      def concurrency_key_change_to_be_saved: () -> Array[String?]?

      def concurrency_key_in_database: () -> String?

      def saved_change_to_concurrency_key: () -> Array[String?]?

      def saved_change_to_concurrency_key?: () -> bool

      def will_save_change_to_concurrency_key?: () -> bool

      def restore_concurrency_key!: () -> void

      def clear_concurrency_key_change: () -> void

      def cron_key: () -> String?

      def cron_key=: (String?) -> String?

      def cron_key?: () -> bool

      def cron_key_changed?: () -> bool

      def cron_key_change: () -> [ String?, String? ]

      def cron_key_will_change!: () -> void

      def cron_key_was: () -> String?

      def cron_key_previously_changed?: () -> bool

      def cron_key_previous_change: () -> Array[String?]?

      def cron_key_previously_was: () -> String?

      def cron_key_before_last_save: () -> String?

      def cron_key_change_to_be_saved: () -> Array[String?]?

      def cron_key_in_database: () -> String?

      def saved_change_to_cron_key: () -> Array[String?]?

      def saved_change_to_cron_key?: () -> bool

      def will_save_change_to_cron_key?: () -> bool

      def restore_cron_key!: () -> void

      def clear_cron_key_change: () -> void

      def retried_good_job_id: () -> String?

      def retried_good_job_id=: (String?) -> String?

      def retried_good_job_id?: () -> bool

      def retried_good_job_id_changed?: () -> bool

      def retried_good_job_id_change: () -> [ String?, String? ]

      def retried_good_job_id_will_change!: () -> void

      def retried_good_job_id_was: () -> String?

      def retried_good_job_id_previously_changed?: () -> bool

      def retried_good_job_id_previous_change: () -> Array[String?]?

      def retried_good_job_id_previously_was: () -> String?

      def retried_good_job_id_before_last_save: () -> String?

      def retried_good_job_id_change_to_be_saved: () -> Array[String?]?

      def retried_good_job_id_in_database: () -> String?

      def saved_change_to_retried_good_job_id: () -> Array[String?]?

      def saved_change_to_retried_good_job_id?: () -> bool

      def will_save_change_to_retried_good_job_id?: () -> bool

      def restore_retried_good_job_id!: () -> void

      def clear_retried_good_job_id_change: () -> void

      def cron_at: () -> ActiveSupport::TimeWithZone?

      def cron_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

      def cron_at?: () -> bool

      def cron_at_changed?: () -> bool

      def cron_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def cron_at_will_change!: () -> void

      def cron_at_was: () -> ActiveSupport::TimeWithZone?

      def cron_at_previously_changed?: () -> bool

      def cron_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def cron_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def cron_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def cron_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def cron_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_cron_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_cron_at?: () -> bool

      def will_save_change_to_cron_at?: () -> bool

      def restore_cron_at!: () -> void

      def clear_cron_at_change: () -> void

      def batch_id: () -> String?

      def batch_id=: (String?) -> String?

      def batch_id?: () -> bool

      def batch_id_changed?: () -> bool

      def batch_id_change: () -> [ String?, String? ]

      def batch_id_will_change!: () -> void

      def batch_id_was: () -> String?

      def batch_id_previously_changed?: () -> bool

      def batch_id_previous_change: () -> Array[String?]?

      def batch_id_previously_was: () -> String?

      def batch_id_before_last_save: () -> String?

      def batch_id_change_to_be_saved: () -> Array[String?]?

      def batch_id_in_database: () -> String?

      def saved_change_to_batch_id: () -> Array[String?]?

      def saved_change_to_batch_id?: () -> bool

      def will_save_change_to_batch_id?: () -> bool

      def restore_batch_id!: () -> void

      def clear_batch_id_change: () -> void

      def batch_callback_id: () -> String?

      def batch_callback_id=: (String?) -> String?

      def batch_callback_id?: () -> bool

      def batch_callback_id_changed?: () -> bool

      def batch_callback_id_change: () -> [ String?, String? ]

      def batch_callback_id_will_change!: () -> void

      def batch_callback_id_was: () -> String?

      def batch_callback_id_previously_changed?: () -> bool

      def batch_callback_id_previous_change: () -> Array[String?]?

      def batch_callback_id_previously_was: () -> String?

      def batch_callback_id_before_last_save: () -> String?

      def batch_callback_id_change_to_be_saved: () -> Array[String?]?

      def batch_callback_id_in_database: () -> String?

      def saved_change_to_batch_callback_id: () -> Array[String?]?

      def saved_change_to_batch_callback_id?: () -> bool

      def will_save_change_to_batch_callback_id?: () -> bool

      def restore_batch_callback_id!: () -> void

      def clear_batch_callback_id_change: () -> void

      def is_discrete: () -> bool?

      def is_discrete=: (bool?) -> bool?

      def is_discrete?: () -> bool

      def is_discrete_changed?: () -> bool

      def is_discrete_change: () -> [ bool?, bool? ]

      def is_discrete_will_change!: () -> void

      def is_discrete_was: () -> bool?

      def is_discrete_previously_changed?: () -> bool

      def is_discrete_previous_change: () -> Array[bool?]?

      def is_discrete_previously_was: () -> bool?

      def is_discrete_before_last_save: () -> bool?

      def is_discrete_change_to_be_saved: () -> Array[bool?]?

      def is_discrete_in_database: () -> bool?

      def saved_change_to_is_discrete: () -> Array[bool?]?

      def saved_change_to_is_discrete?: () -> bool

      def will_save_change_to_is_discrete?: () -> bool

      def restore_is_discrete!: () -> void

      def clear_is_discrete_change: () -> void

      def executions_count: () -> Integer?

      def executions_count=: (Integer?) -> Integer?

      def executions_count?: () -> bool

      def executions_count_changed?: () -> bool

      def executions_count_change: () -> [ Integer?, Integer? ]

      def executions_count_will_change!: () -> void

      def executions_count_was: () -> Integer?

      def executions_count_previously_changed?: () -> bool

      def executions_count_previous_change: () -> Array[Integer?]?

      def executions_count_previously_was: () -> Integer?

      def executions_count_before_last_save: () -> Integer?

      def executions_count_change_to_be_saved: () -> Array[Integer?]?

      def executions_count_in_database: () -> Integer?

      def saved_change_to_executions_count: () -> Array[Integer?]?

      def saved_change_to_executions_count?: () -> bool

      def will_save_change_to_executions_count?: () -> bool

      def restore_executions_count!: () -> void

      def clear_executions_count_change: () -> void

      def job_class: () -> String?

      def job_class=: (String?) -> String?

      def job_class?: () -> bool

      def job_class_changed?: () -> bool

      def job_class_change: () -> [ String?, String? ]

      def job_class_will_change!: () -> void

      def job_class_was: () -> String?

      def job_class_previously_changed?: () -> bool

      def job_class_previous_change: () -> Array[String?]?

      def job_class_previously_was: () -> String?

      def job_class_before_last_save: () -> String?

      def job_class_change_to_be_saved: () -> Array[String?]?

      def job_class_in_database: () -> String?

      def saved_change_to_job_class: () -> Array[String?]?

      def saved_change_to_job_class?: () -> bool

      def will_save_change_to_job_class?: () -> bool

      def restore_job_class!: () -> void

      def clear_job_class_change: () -> void

      def error_event: () -> Integer?

      def error_event=: (Integer?) -> Integer?

      def error_event?: () -> bool

      def error_event_changed?: () -> bool

      def error_event_change: () -> [ Integer?, Integer? ]

      def error_event_will_change!: () -> void

      def error_event_was: () -> Integer?

      def error_event_previously_changed?: () -> bool

      def error_event_previous_change: () -> Array[Integer?]?

      def error_event_previously_was: () -> Integer?

      def error_event_before_last_save: () -> Integer?

      def error_event_change_to_be_saved: () -> Array[Integer?]?

      def error_event_in_database: () -> Integer?

      def saved_change_to_error_event: () -> Array[Integer?]?

      def saved_change_to_error_event?: () -> bool

      def will_save_change_to_error_event?: () -> bool

      def restore_error_event!: () -> void

      def clear_error_event_change: () -> void
    end
    include GeneratedAttributeMethods

    module GeneratedAssociationMethods
    end
    include GeneratedAssociationMethods

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[GoodJob::BaseExecution, String]
      include Enumerable[GoodJob::BaseExecution]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[GoodJob::BaseExecution, String]
    end
  end
end
