module GoodJob
  class BatchRecord < ::GoodJob::BaseRecord
    extend _ActiveRecord_Relation_ClassMethods[GoodJob::BatchRecord, ActiveRecord_Relation, String]

    module GeneratedAttributeMethods
      def id: () -> String

      def id=: (String) -> String

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ String?, String? ]

      def id_will_change!: () -> void

      def id_was: () -> String?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> Array[String?]?

      def id_previously_was: () -> String?

      def id_before_last_save: () -> String?

      def id_change_to_be_saved: () -> Array[String?]?

      def id_in_database: () -> String?

      def saved_change_to_id: () -> Array[String?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def created_at: () -> ActiveSupport::TimeWithZone

      def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def created_at?: () -> bool

      def created_at_changed?: () -> bool

      def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def created_at_will_change!: () -> void

      def created_at_was: () -> ActiveSupport::TimeWithZone?

      def created_at_previously_changed?: () -> bool

      def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_created_at?: () -> bool

      def will_save_change_to_created_at?: () -> bool

      def restore_created_at!: () -> void

      def clear_created_at_change: () -> void

      def updated_at: () -> ActiveSupport::TimeWithZone

      def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def updated_at?: () -> bool

      def updated_at_changed?: () -> bool

      def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def updated_at_will_change!: () -> void

      def updated_at_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_previously_changed?: () -> bool

      def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_updated_at?: () -> bool

      def will_save_change_to_updated_at?: () -> bool

      def restore_updated_at!: () -> void

      def clear_updated_at_change: () -> void

      def description: () -> String?

      def description=: (String?) -> String?

      def description?: () -> bool

      def description_changed?: () -> bool

      def description_change: () -> [ String?, String? ]

      def description_will_change!: () -> void

      def description_was: () -> String?

      def description_previously_changed?: () -> bool

      def description_previous_change: () -> Array[String?]?

      def description_previously_was: () -> String?

      def description_before_last_save: () -> String?

      def description_change_to_be_saved: () -> Array[String?]?

      def description_in_database: () -> String?

      def saved_change_to_description: () -> Array[String?]?

      def saved_change_to_description?: () -> bool

      def will_save_change_to_description?: () -> bool

      def restore_description!: () -> void

      def clear_description_change: () -> void

      def serialized_properties: () -> untyped?

      def serialized_properties=: (untyped?) -> untyped?

      def serialized_properties?: () -> bool

      def serialized_properties_changed?: () -> bool

      def serialized_properties_change: () -> [ untyped?, untyped? ]

      def serialized_properties_will_change!: () -> void

      def serialized_properties_was: () -> untyped?

      def serialized_properties_previously_changed?: () -> bool

      def serialized_properties_previous_change: () -> Array[untyped?]?

      def serialized_properties_previously_was: () -> untyped?

      def serialized_properties_before_last_save: () -> untyped?

      def serialized_properties_change_to_be_saved: () -> Array[untyped?]?

      def serialized_properties_in_database: () -> untyped?

      def saved_change_to_serialized_properties: () -> Array[untyped?]?

      def saved_change_to_serialized_properties?: () -> bool

      def will_save_change_to_serialized_properties?: () -> bool

      def restore_serialized_properties!: () -> void

      def clear_serialized_properties_change: () -> void

      def on_finish: () -> String?

      def on_finish=: (String?) -> String?

      def on_finish?: () -> bool

      def on_finish_changed?: () -> bool

      def on_finish_change: () -> [ String?, String? ]

      def on_finish_will_change!: () -> void

      def on_finish_was: () -> String?

      def on_finish_previously_changed?: () -> bool

      def on_finish_previous_change: () -> Array[String?]?

      def on_finish_previously_was: () -> String?

      def on_finish_before_last_save: () -> String?

      def on_finish_change_to_be_saved: () -> Array[String?]?

      def on_finish_in_database: () -> String?

      def saved_change_to_on_finish: () -> Array[String?]?

      def saved_change_to_on_finish?: () -> bool

      def will_save_change_to_on_finish?: () -> bool

      def restore_on_finish!: () -> void

      def clear_on_finish_change: () -> void

      def on_success: () -> String?

      def on_success=: (String?) -> String?

      def on_success?: () -> bool

      def on_success_changed?: () -> bool

      def on_success_change: () -> [ String?, String? ]

      def on_success_will_change!: () -> void

      def on_success_was: () -> String?

      def on_success_previously_changed?: () -> bool

      def on_success_previous_change: () -> Array[String?]?

      def on_success_previously_was: () -> String?

      def on_success_before_last_save: () -> String?

      def on_success_change_to_be_saved: () -> Array[String?]?

      def on_success_in_database: () -> String?

      def saved_change_to_on_success: () -> Array[String?]?

      def saved_change_to_on_success?: () -> bool

      def will_save_change_to_on_success?: () -> bool

      def restore_on_success!: () -> void

      def clear_on_success_change: () -> void

      def on_discard: () -> String?

      def on_discard=: (String?) -> String?

      def on_discard?: () -> bool

      def on_discard_changed?: () -> bool

      def on_discard_change: () -> [ String?, String? ]

      def on_discard_will_change!: () -> void

      def on_discard_was: () -> String?

      def on_discard_previously_changed?: () -> bool

      def on_discard_previous_change: () -> Array[String?]?

      def on_discard_previously_was: () -> String?

      def on_discard_before_last_save: () -> String?

      def on_discard_change_to_be_saved: () -> Array[String?]?

      def on_discard_in_database: () -> String?

      def saved_change_to_on_discard: () -> Array[String?]?

      def saved_change_to_on_discard?: () -> bool

      def will_save_change_to_on_discard?: () -> bool

      def restore_on_discard!: () -> void

      def clear_on_discard_change: () -> void

      def callback_queue_name: () -> String?

      def callback_queue_name=: (String?) -> String?

      def callback_queue_name?: () -> bool

      def callback_queue_name_changed?: () -> bool

      def callback_queue_name_change: () -> [ String?, String? ]

      def callback_queue_name_will_change!: () -> void

      def callback_queue_name_was: () -> String?

      def callback_queue_name_previously_changed?: () -> bool

      def callback_queue_name_previous_change: () -> Array[String?]?

      def callback_queue_name_previously_was: () -> String?

      def callback_queue_name_before_last_save: () -> String?

      def callback_queue_name_change_to_be_saved: () -> Array[String?]?

      def callback_queue_name_in_database: () -> String?

      def saved_change_to_callback_queue_name: () -> Array[String?]?

      def saved_change_to_callback_queue_name?: () -> bool

      def will_save_change_to_callback_queue_name?: () -> bool

      def restore_callback_queue_name!: () -> void

      def clear_callback_queue_name_change: () -> void

      def callback_priority: () -> Integer?

      def callback_priority=: (Integer?) -> Integer?

      def callback_priority?: () -> bool

      def callback_priority_changed?: () -> bool

      def callback_priority_change: () -> [ Integer?, Integer? ]

      def callback_priority_will_change!: () -> void

      def callback_priority_was: () -> Integer?

      def callback_priority_previously_changed?: () -> bool

      def callback_priority_previous_change: () -> Array[Integer?]?

      def callback_priority_previously_was: () -> Integer?

      def callback_priority_before_last_save: () -> Integer?

      def callback_priority_change_to_be_saved: () -> Array[Integer?]?

      def callback_priority_in_database: () -> Integer?

      def saved_change_to_callback_priority: () -> Array[Integer?]?

      def saved_change_to_callback_priority?: () -> bool

      def will_save_change_to_callback_priority?: () -> bool

      def restore_callback_priority!: () -> void

      def clear_callback_priority_change: () -> void

      def enqueued_at: () -> ActiveSupport::TimeWithZone?

      def enqueued_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

      def enqueued_at?: () -> bool

      def enqueued_at_changed?: () -> bool

      def enqueued_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def enqueued_at_will_change!: () -> void

      def enqueued_at_was: () -> ActiveSupport::TimeWithZone?

      def enqueued_at_previously_changed?: () -> bool

      def enqueued_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def enqueued_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def enqueued_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def enqueued_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def enqueued_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_enqueued_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_enqueued_at?: () -> bool

      def will_save_change_to_enqueued_at?: () -> bool

      def restore_enqueued_at!: () -> void

      def clear_enqueued_at_change: () -> void

      def discarded_at: () -> ActiveSupport::TimeWithZone?

      def discarded_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

      def discarded_at?: () -> bool

      def discarded_at_changed?: () -> bool

      def discarded_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def discarded_at_will_change!: () -> void

      def discarded_at_was: () -> ActiveSupport::TimeWithZone?

      def discarded_at_previously_changed?: () -> bool

      def discarded_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def discarded_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def discarded_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def discarded_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def discarded_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_discarded_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_discarded_at?: () -> bool

      def will_save_change_to_discarded_at?: () -> bool

      def restore_discarded_at!: () -> void

      def clear_discarded_at_change: () -> void

      def finished_at: () -> ActiveSupport::TimeWithZone?

      def finished_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

      def finished_at?: () -> bool

      def finished_at_changed?: () -> bool

      def finished_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def finished_at_will_change!: () -> void

      def finished_at_was: () -> ActiveSupport::TimeWithZone?

      def finished_at_previously_changed?: () -> bool

      def finished_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def finished_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def finished_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def finished_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def finished_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_finished_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_finished_at?: () -> bool

      def will_save_change_to_finished_at?: () -> bool

      def restore_finished_at!: () -> void

      def clear_finished_at_change: () -> void
    end
    include GeneratedAttributeMethods
    def jobs: () -> GoodJob::Job::ActiveRecord_Associations_CollectionProxy
    def jobs=: (GoodJob::Job::ActiveRecord_Associations_CollectionProxy | Array[GoodJob::Job]) -> (GoodJob::Job::ActiveRecord_Associations_CollectionProxy | Array[GoodJob::Job])
    def job_ids: () -> Array[Integer]
    def job_ids=: (Array[Integer]) -> Array[Integer]
    def executions: () -> GoodJob::Execution::ActiveRecord_Associations_CollectionProxy
    def executions=: (GoodJob::Execution::ActiveRecord_Associations_CollectionProxy | Array[GoodJob::Execution]) -> (GoodJob::Execution::ActiveRecord_Associations_CollectionProxy | Array[GoodJob::Execution])
    def execution_ids: () -> Array[Integer]
    def execution_ids=: (Array[Integer]) -> Array[Integer]
    def callback_jobs: () -> GoodJob::Job::ActiveRecord_Associations_CollectionProxy
    def callback_jobs=: (GoodJob::Job::ActiveRecord_Associations_CollectionProxy | Array[GoodJob::Job]) -> (GoodJob::Job::ActiveRecord_Associations_CollectionProxy | Array[GoodJob::Job])
    def callback_job_ids: () -> Array[Integer]
    def callback_job_ids=: (Array[Integer]) -> Array[Integer]

    module GeneratedAssociationMethods
    end
    include GeneratedAssociationMethods

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[GoodJob::BatchRecord, String]
      include Enumerable[GoodJob::BatchRecord]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[GoodJob::BatchRecord, String]
    end
  end
end
