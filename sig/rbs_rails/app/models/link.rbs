class Link < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Link, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def title: () -> String?

    def title=: (String?) -> String?

    def title?: () -> bool

    def title_changed?: () -> bool

    def title_change: () -> [ String?, String? ]

    def title_will_change!: () -> void

    def title_was: () -> String?

    def title_previously_changed?: () -> bool

    def title_previous_change: () -> Array[String?]?

    def title_previously_was: () -> String?

    def title_before_last_save: () -> String?

    def title_change_to_be_saved: () -> Array[String?]?

    def title_in_database: () -> String?

    def saved_change_to_title: () -> Array[String?]?

    def saved_change_to_title?: () -> bool

    def will_save_change_to_title?: () -> bool

    def restore_title!: () -> void

    def clear_title_change: () -> void

    def summary: () -> String?

    def summary=: (String?) -> String?

    def summary?: () -> bool

    def summary_changed?: () -> bool

    def summary_change: () -> [ String?, String? ]

    def summary_will_change!: () -> void

    def summary_was: () -> String?

    def summary_previously_changed?: () -> bool

    def summary_previous_change: () -> Array[String?]?

    def summary_previously_was: () -> String?

    def summary_before_last_save: () -> String?

    def summary_change_to_be_saved: () -> Array[String?]?

    def summary_in_database: () -> String?

    def saved_change_to_summary: () -> Array[String?]?

    def saved_change_to_summary?: () -> bool

    def will_save_change_to_summary?: () -> bool

    def restore_summary!: () -> void

    def clear_summary_change: () -> void

    def image_url: () -> String?

    def image_url=: (String?) -> String?

    def image_url?: () -> bool

    def image_url_changed?: () -> bool

    def image_url_change: () -> [ String?, String? ]

    def image_url_will_change!: () -> void

    def image_url_was: () -> String?

    def image_url_previously_changed?: () -> bool

    def image_url_previous_change: () -> Array[String?]?

    def image_url_previously_was: () -> String?

    def image_url_before_last_save: () -> String?

    def image_url_change_to_be_saved: () -> Array[String?]?

    def image_url_in_database: () -> String?

    def saved_change_to_image_url: () -> Array[String?]?

    def saved_change_to_image_url?: () -> bool

    def will_save_change_to_image_url?: () -> bool

    def restore_image_url!: () -> void

    def clear_image_url_change: () -> void

    def url: () -> String

    def url=: (String) -> String

    def url?: () -> bool

    def url_changed?: () -> bool

    def url_change: () -> [ String?, String? ]

    def url_will_change!: () -> void

    def url_was: () -> String?

    def url_previously_changed?: () -> bool

    def url_previous_change: () -> Array[String?]?

    def url_previously_was: () -> String?

    def url_before_last_save: () -> String?

    def url_change_to_be_saved: () -> Array[String?]?

    def url_in_database: () -> String?

    def saved_change_to_url: () -> Array[String?]?

    def saved_change_to_url?: () -> bool

    def will_save_change_to_url?: () -> bool

    def restore_url!: () -> void

    def clear_url_change: () -> void

    def sanitized_url: () -> String

    def sanitized_url=: (String) -> String

    def sanitized_url?: () -> bool

    def sanitized_url_changed?: () -> bool

    def sanitized_url_change: () -> [ String?, String? ]

    def sanitized_url_will_change!: () -> void

    def sanitized_url_was: () -> String?

    def sanitized_url_previously_changed?: () -> bool

    def sanitized_url_previous_change: () -> Array[String?]?

    def sanitized_url_previously_was: () -> String?

    def sanitized_url_before_last_save: () -> String?

    def sanitized_url_change_to_be_saved: () -> Array[String?]?

    def sanitized_url_in_database: () -> String?

    def saved_change_to_sanitized_url: () -> Array[String?]?

    def saved_change_to_sanitized_url?: () -> bool

    def will_save_change_to_sanitized_url?: () -> bool

    def restore_sanitized_url!: () -> void

    def clear_sanitized_url_change: () -> void

    def scraping_state: () -> Integer

    def scraping_state=: (Integer) -> Integer

    def scraping_state?: () -> bool

    def scraping_state_changed?: () -> bool

    def scraping_state_change: () -> [ Integer?, Integer? ]

    def scraping_state_will_change!: () -> void

    def scraping_state_was: () -> Integer?

    def scraping_state_previously_changed?: () -> bool

    def scraping_state_previous_change: () -> Array[Integer?]?

    def scraping_state_previously_was: () -> Integer?

    def scraping_state_before_last_save: () -> Integer?

    def scraping_state_change_to_be_saved: () -> Array[Integer?]?

    def scraping_state_in_database: () -> Integer?

    def saved_change_to_scraping_state: () -> Array[Integer?]?

    def saved_change_to_scraping_state?: () -> bool

    def will_save_change_to_scraping_state?: () -> bool

    def restore_scraping_state!: () -> void

    def clear_scraping_state_change: () -> void

    def user_id: () -> Integer

    def user_id=: (Integer) -> Integer

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ Integer?, Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> Array[Integer?]?

    def user_id_previously_was: () -> Integer?

    def user_id_before_last_save: () -> Integer?

    def user_id_change_to_be_saved: () -> Array[Integer?]?

    def user_id_in_database: () -> Integer?

    def saved_change_to_user_id: () -> Array[Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def discarded_at: () -> ActiveSupport::TimeWithZone?

    def discarded_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def discarded_at?: () -> bool

    def discarded_at_changed?: () -> bool

    def discarded_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def discarded_at_will_change!: () -> void

    def discarded_at_was: () -> ActiveSupport::TimeWithZone?

    def discarded_at_previously_changed?: () -> bool

    def discarded_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def discarded_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def discarded_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def discarded_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def discarded_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_discarded_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_discarded_at?: () -> bool

    def will_save_change_to_discarded_at?: () -> bool

    def restore_discarded_at!: () -> void

    def clear_discarded_at_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def user: () -> User
  def user=: (User?) -> User?
  def reload_user: () -> User?
  def build_user: (untyped) -> User
  def create_user: (untyped) -> User
  def create_user!: (untyped) -> User
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  def self.with_url: (untyped url) -> ActiveRecord_Relation

  module GeneratedRelationMethods
    def with_url: (untyped url) -> ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Link, Integer]
    include Enumerable[Link]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Link, Integer]
  end
end
