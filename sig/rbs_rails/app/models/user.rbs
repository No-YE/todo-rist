class User < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[User, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def email: () -> String

    def email=: (String) -> String

    def email?: () -> bool

    def email_changed?: () -> bool

    def email_change: () -> [ String?, String? ]

    def email_will_change!: () -> void

    def email_was: () -> String?

    def email_previously_changed?: () -> bool

    def email_previous_change: () -> Array[String?]?

    def email_previously_was: () -> String?

    def email_before_last_save: () -> String?

    def email_change_to_be_saved: () -> Array[String?]?

    def email_in_database: () -> String?

    def saved_change_to_email: () -> Array[String?]?

    def saved_change_to_email?: () -> bool

    def will_save_change_to_email?: () -> bool

    def restore_email!: () -> void

    def clear_email_change: () -> void

    def encrypted_password: () -> String

    def encrypted_password=: (String) -> String

    def encrypted_password?: () -> bool

    def encrypted_password_changed?: () -> bool

    def encrypted_password_change: () -> [ String?, String? ]

    def encrypted_password_will_change!: () -> void

    def encrypted_password_was: () -> String?

    def encrypted_password_previously_changed?: () -> bool

    def encrypted_password_previous_change: () -> Array[String?]?

    def encrypted_password_previously_was: () -> String?

    def encrypted_password_before_last_save: () -> String?

    def encrypted_password_change_to_be_saved: () -> Array[String?]?

    def encrypted_password_in_database: () -> String?

    def saved_change_to_encrypted_password: () -> Array[String?]?

    def saved_change_to_encrypted_password?: () -> bool

    def will_save_change_to_encrypted_password?: () -> bool

    def restore_encrypted_password!: () -> void

    def clear_encrypted_password_change: () -> void

    def name: () -> String

    def name=: (String) -> String

    def name?: () -> bool

    def name_changed?: () -> bool

    def name_change: () -> [ String?, String? ]

    def name_will_change!: () -> void

    def name_was: () -> String?

    def name_previously_changed?: () -> bool

    def name_previous_change: () -> Array[String?]?

    def name_previously_was: () -> String?

    def name_before_last_save: () -> String?

    def name_change_to_be_saved: () -> Array[String?]?

    def name_in_database: () -> String?

    def saved_change_to_name: () -> Array[String?]?

    def saved_change_to_name?: () -> bool

    def will_save_change_to_name?: () -> bool

    def restore_name!: () -> void

    def clear_name_change: () -> void

    def provider: () -> String

    def provider=: (String) -> String

    def provider?: () -> bool

    def provider_changed?: () -> bool

    def provider_change: () -> [ String?, String? ]

    def provider_will_change!: () -> void

    def provider_was: () -> String?

    def provider_previously_changed?: () -> bool

    def provider_previous_change: () -> Array[String?]?

    def provider_previously_was: () -> String?

    def provider_before_last_save: () -> String?

    def provider_change_to_be_saved: () -> Array[String?]?

    def provider_in_database: () -> String?

    def saved_change_to_provider: () -> Array[String?]?

    def saved_change_to_provider?: () -> bool

    def will_save_change_to_provider?: () -> bool

    def restore_provider!: () -> void

    def clear_provider_change: () -> void

    def uid: () -> String

    def uid=: (String) -> String

    def uid?: () -> bool

    def uid_changed?: () -> bool

    def uid_change: () -> [ String?, String? ]

    def uid_will_change!: () -> void

    def uid_was: () -> String?

    def uid_previously_changed?: () -> bool

    def uid_previous_change: () -> Array[String?]?

    def uid_previously_was: () -> String?

    def uid_before_last_save: () -> String?

    def uid_change_to_be_saved: () -> Array[String?]?

    def uid_in_database: () -> String?

    def saved_change_to_uid: () -> Array[String?]?

    def saved_change_to_uid?: () -> bool

    def will_save_change_to_uid?: () -> bool

    def restore_uid!: () -> void

    def clear_uid_change: () -> void

    def image: () -> String?

    def image=: (String?) -> String?

    def image?: () -> bool

    def image_changed?: () -> bool

    def image_change: () -> [ String?, String? ]

    def image_will_change!: () -> void

    def image_was: () -> String?

    def image_previously_changed?: () -> bool

    def image_previous_change: () -> Array[String?]?

    def image_previously_was: () -> String?

    def image_before_last_save: () -> String?

    def image_change_to_be_saved: () -> Array[String?]?

    def image_in_database: () -> String?

    def saved_change_to_image: () -> Array[String?]?

    def saved_change_to_image?: () -> bool

    def will_save_change_to_image?: () -> bool

    def restore_image!: () -> void

    def clear_image_change: () -> void

    def sign_in_count: () -> Integer

    def sign_in_count=: (Integer) -> Integer

    def sign_in_count?: () -> bool

    def sign_in_count_changed?: () -> bool

    def sign_in_count_change: () -> [ Integer?, Integer? ]

    def sign_in_count_will_change!: () -> void

    def sign_in_count_was: () -> Integer?

    def sign_in_count_previously_changed?: () -> bool

    def sign_in_count_previous_change: () -> Array[Integer?]?

    def sign_in_count_previously_was: () -> Integer?

    def sign_in_count_before_last_save: () -> Integer?

    def sign_in_count_change_to_be_saved: () -> Array[Integer?]?

    def sign_in_count_in_database: () -> Integer?

    def saved_change_to_sign_in_count: () -> Array[Integer?]?

    def saved_change_to_sign_in_count?: () -> bool

    def will_save_change_to_sign_in_count?: () -> bool

    def restore_sign_in_count!: () -> void

    def clear_sign_in_count_change: () -> void

    def current_sign_in_at: () -> ActiveSupport::TimeWithZone?

    def current_sign_in_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def current_sign_in_at?: () -> bool

    def current_sign_in_at_changed?: () -> bool

    def current_sign_in_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def current_sign_in_at_will_change!: () -> void

    def current_sign_in_at_was: () -> ActiveSupport::TimeWithZone?

    def current_sign_in_at_previously_changed?: () -> bool

    def current_sign_in_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def current_sign_in_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def current_sign_in_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def current_sign_in_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def current_sign_in_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_current_sign_in_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_current_sign_in_at?: () -> bool

    def will_save_change_to_current_sign_in_at?: () -> bool

    def restore_current_sign_in_at!: () -> void

    def clear_current_sign_in_at_change: () -> void

    def last_sign_in_at: () -> ActiveSupport::TimeWithZone?

    def last_sign_in_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def last_sign_in_at?: () -> bool

    def last_sign_in_at_changed?: () -> bool

    def last_sign_in_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def last_sign_in_at_will_change!: () -> void

    def last_sign_in_at_was: () -> ActiveSupport::TimeWithZone?

    def last_sign_in_at_previously_changed?: () -> bool

    def last_sign_in_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def last_sign_in_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def last_sign_in_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def last_sign_in_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def last_sign_in_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_last_sign_in_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_last_sign_in_at?: () -> bool

    def will_save_change_to_last_sign_in_at?: () -> bool

    def restore_last_sign_in_at!: () -> void

    def clear_last_sign_in_at_change: () -> void

    def current_sign_in_ip: () -> String?

    def current_sign_in_ip=: (String?) -> String?

    def current_sign_in_ip?: () -> bool

    def current_sign_in_ip_changed?: () -> bool

    def current_sign_in_ip_change: () -> [ String?, String? ]

    def current_sign_in_ip_will_change!: () -> void

    def current_sign_in_ip_was: () -> String?

    def current_sign_in_ip_previously_changed?: () -> bool

    def current_sign_in_ip_previous_change: () -> Array[String?]?

    def current_sign_in_ip_previously_was: () -> String?

    def current_sign_in_ip_before_last_save: () -> String?

    def current_sign_in_ip_change_to_be_saved: () -> Array[String?]?

    def current_sign_in_ip_in_database: () -> String?

    def saved_change_to_current_sign_in_ip: () -> Array[String?]?

    def saved_change_to_current_sign_in_ip?: () -> bool

    def will_save_change_to_current_sign_in_ip?: () -> bool

    def restore_current_sign_in_ip!: () -> void

    def clear_current_sign_in_ip_change: () -> void

    def last_sign_in_ip: () -> String?

    def last_sign_in_ip=: (String?) -> String?

    def last_sign_in_ip?: () -> bool

    def last_sign_in_ip_changed?: () -> bool

    def last_sign_in_ip_change: () -> [ String?, String? ]

    def last_sign_in_ip_will_change!: () -> void

    def last_sign_in_ip_was: () -> String?

    def last_sign_in_ip_previously_changed?: () -> bool

    def last_sign_in_ip_previous_change: () -> Array[String?]?

    def last_sign_in_ip_previously_was: () -> String?

    def last_sign_in_ip_before_last_save: () -> String?

    def last_sign_in_ip_change_to_be_saved: () -> Array[String?]?

    def last_sign_in_ip_in_database: () -> String?

    def saved_change_to_last_sign_in_ip: () -> Array[String?]?

    def saved_change_to_last_sign_in_ip?: () -> bool

    def will_save_change_to_last_sign_in_ip?: () -> bool

    def restore_last_sign_in_ip!: () -> void

    def clear_last_sign_in_ip_change: () -> void

    def admin: () -> bool

    def admin=: (bool) -> bool

    def admin?: () -> bool

    def admin_changed?: () -> bool

    def admin_change: () -> [ bool?, bool? ]

    def admin_will_change!: () -> void

    def admin_was: () -> bool?

    def admin_previously_changed?: () -> bool

    def admin_previous_change: () -> Array[bool?]?

    def admin_previously_was: () -> bool?

    def admin_before_last_save: () -> bool?

    def admin_change_to_be_saved: () -> Array[bool?]?

    def admin_in_database: () -> bool?

    def saved_change_to_admin: () -> Array[bool?]?

    def saved_change_to_admin?: () -> bool

    def will_save_change_to_admin?: () -> bool

    def restore_admin!: () -> void

    def clear_admin_change: () -> void

    def discarded_at: () -> ActiveSupport::TimeWithZone?

    def discarded_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def discarded_at?: () -> bool

    def discarded_at_changed?: () -> bool

    def discarded_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def discarded_at_will_change!: () -> void

    def discarded_at_was: () -> ActiveSupport::TimeWithZone?

    def discarded_at_previously_changed?: () -> bool

    def discarded_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def discarded_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def discarded_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def discarded_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def discarded_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_discarded_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_discarded_at?: () -> bool

    def will_save_change_to_discarded_at?: () -> bool

    def restore_discarded_at!: () -> void

    def clear_discarded_at_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods
  def links: () -> Link::ActiveRecord_Associations_CollectionProxy
  def links=: (Link::ActiveRecord_Associations_CollectionProxy | Array[Link]) -> (Link::ActiveRecord_Associations_CollectionProxy | Array[Link])
  def link_ids: () -> Array[Integer]
  def link_ids=: (Array[Integer]) -> Array[Integer]

  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[User, Integer]
    include Enumerable[User]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[User, Integer]
  end
end
