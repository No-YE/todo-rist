module Motor
  class ApiConfig < ::Motor::ApplicationRecord
    extend _ActiveRecord_Relation_ClassMethods[Motor::ApiConfig, ActiveRecord_Relation, Integer]

    module GeneratedAttributeMethods
      def id: () -> Integer

      def id=: (Integer) -> Integer

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ Integer?, Integer? ]

      def id_will_change!: () -> void

      def id_was: () -> Integer?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> Array[Integer?]?

      def id_previously_was: () -> Integer?

      def id_before_last_save: () -> Integer?

      def id_change_to_be_saved: () -> Array[Integer?]?

      def id_in_database: () -> Integer?

      def saved_change_to_id: () -> Array[Integer?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def name: () -> String

      def name=: (String) -> String

      def name?: () -> bool

      def name_changed?: () -> bool

      def name_change: () -> [ String?, String? ]

      def name_will_change!: () -> void

      def name_was: () -> String?

      def name_previously_changed?: () -> bool

      def name_previous_change: () -> Array[String?]?

      def name_previously_was: () -> String?

      def name_before_last_save: () -> String?

      def name_change_to_be_saved: () -> Array[String?]?

      def name_in_database: () -> String?

      def saved_change_to_name: () -> Array[String?]?

      def saved_change_to_name?: () -> bool

      def will_save_change_to_name?: () -> bool

      def restore_name!: () -> void

      def clear_name_change: () -> void

      def url: () -> String

      def url=: (String) -> String

      def url?: () -> bool

      def url_changed?: () -> bool

      def url_change: () -> [ String?, String? ]

      def url_will_change!: () -> void

      def url_was: () -> String?

      def url_previously_changed?: () -> bool

      def url_previous_change: () -> Array[String?]?

      def url_previously_was: () -> String?

      def url_before_last_save: () -> String?

      def url_change_to_be_saved: () -> Array[String?]?

      def url_in_database: () -> String?

      def saved_change_to_url: () -> Array[String?]?

      def saved_change_to_url?: () -> bool

      def will_save_change_to_url?: () -> bool

      def restore_url!: () -> void

      def clear_url_change: () -> void

      def preferences: () -> String

      def preferences=: (String) -> String

      def preferences?: () -> bool

      def preferences_changed?: () -> bool

      def preferences_change: () -> [ String?, String? ]

      def preferences_will_change!: () -> void

      def preferences_was: () -> String?

      def preferences_previously_changed?: () -> bool

      def preferences_previous_change: () -> Array[String?]?

      def preferences_previously_was: () -> String?

      def preferences_before_last_save: () -> String?

      def preferences_change_to_be_saved: () -> Array[String?]?

      def preferences_in_database: () -> String?

      def saved_change_to_preferences: () -> Array[String?]?

      def saved_change_to_preferences?: () -> bool

      def will_save_change_to_preferences?: () -> bool

      def restore_preferences!: () -> void

      def clear_preferences_change: () -> void

      def credentials: () -> String

      def credentials=: (String) -> String

      def credentials?: () -> bool

      def credentials_changed?: () -> bool

      def credentials_change: () -> [ String?, String? ]

      def credentials_will_change!: () -> void

      def credentials_was: () -> String?

      def credentials_previously_changed?: () -> bool

      def credentials_previous_change: () -> Array[String?]?

      def credentials_previously_was: () -> String?

      def credentials_before_last_save: () -> String?

      def credentials_change_to_be_saved: () -> Array[String?]?

      def credentials_in_database: () -> String?

      def saved_change_to_credentials: () -> Array[String?]?

      def saved_change_to_credentials?: () -> bool

      def will_save_change_to_credentials?: () -> bool

      def restore_credentials!: () -> void

      def clear_credentials_change: () -> void

      def description: () -> String?

      def description=: (String?) -> String?

      def description?: () -> bool

      def description_changed?: () -> bool

      def description_change: () -> [ String?, String? ]

      def description_will_change!: () -> void

      def description_was: () -> String?

      def description_previously_changed?: () -> bool

      def description_previous_change: () -> Array[String?]?

      def description_previously_was: () -> String?

      def description_before_last_save: () -> String?

      def description_change_to_be_saved: () -> Array[String?]?

      def description_in_database: () -> String?

      def saved_change_to_description: () -> Array[String?]?

      def saved_change_to_description?: () -> bool

      def will_save_change_to_description?: () -> bool

      def restore_description!: () -> void

      def clear_description_change: () -> void

      def deleted_at: () -> ActiveSupport::TimeWithZone?

      def deleted_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

      def deleted_at?: () -> bool

      def deleted_at_changed?: () -> bool

      def deleted_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def deleted_at_will_change!: () -> void

      def deleted_at_was: () -> ActiveSupport::TimeWithZone?

      def deleted_at_previously_changed?: () -> bool

      def deleted_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def deleted_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def deleted_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def deleted_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def deleted_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_deleted_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_deleted_at?: () -> bool

      def will_save_change_to_deleted_at?: () -> bool

      def restore_deleted_at!: () -> void

      def clear_deleted_at_change: () -> void

      def created_at: () -> ActiveSupport::TimeWithZone

      def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def created_at?: () -> bool

      def created_at_changed?: () -> bool

      def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def created_at_will_change!: () -> void

      def created_at_was: () -> ActiveSupport::TimeWithZone?

      def created_at_previously_changed?: () -> bool

      def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_created_at?: () -> bool

      def will_save_change_to_created_at?: () -> bool

      def restore_created_at!: () -> void

      def clear_created_at_change: () -> void

      def updated_at: () -> ActiveSupport::TimeWithZone

      def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def updated_at?: () -> bool

      def updated_at_changed?: () -> bool

      def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def updated_at_will_change!: () -> void

      def updated_at_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_previously_changed?: () -> bool

      def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_updated_at?: () -> bool

      def will_save_change_to_updated_at?: () -> bool

      def restore_updated_at!: () -> void

      def clear_updated_at_change: () -> void
    end
    include GeneratedAttributeMethods

    def form: () -> Motor::Form?
    def form=: (Motor::Form?) -> Motor::Form?
    def build_form: (untyped) -> Motor::Form
    def create_form: (untyped) -> Motor::Form
    def create_form!: (untyped) -> Motor::Form
    def reload_form: () -> Motor::Form?

    module GeneratedAssociationMethods
    end
    include GeneratedAssociationMethods

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Motor::ApiConfig, Integer]
      include Enumerable[Motor::ApiConfig]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Motor::ApiConfig, Integer]
    end
  end
end
