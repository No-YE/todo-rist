module Motor
  class Note < ::Motor::ApplicationRecord
    extend _ActiveRecord_Relation_ClassMethods[Motor::Note, ActiveRecord_Relation, Integer]

    module GeneratedAttributeMethods
      def id: () -> Integer

      def id=: (Integer) -> Integer

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ Integer?, Integer? ]

      def id_will_change!: () -> void

      def id_was: () -> Integer?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> Array[Integer?]?

      def id_previously_was: () -> Integer?

      def id_before_last_save: () -> Integer?

      def id_change_to_be_saved: () -> Array[Integer?]?

      def id_in_database: () -> Integer?

      def saved_change_to_id: () -> Array[Integer?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def body: () -> String?

      def body=: (String?) -> String?

      def body?: () -> bool

      def body_changed?: () -> bool

      def body_change: () -> [ String?, String? ]

      def body_will_change!: () -> void

      def body_was: () -> String?

      def body_previously_changed?: () -> bool

      def body_previous_change: () -> Array[String?]?

      def body_previously_was: () -> String?

      def body_before_last_save: () -> String?

      def body_change_to_be_saved: () -> Array[String?]?

      def body_in_database: () -> String?

      def saved_change_to_body: () -> Array[String?]?

      def saved_change_to_body?: () -> bool

      def will_save_change_to_body?: () -> bool

      def restore_body!: () -> void

      def clear_body_change: () -> void

      def author_id: () -> Integer?

      def author_id=: (Integer?) -> Integer?

      def author_id?: () -> bool

      def author_id_changed?: () -> bool

      def author_id_change: () -> [ Integer?, Integer? ]

      def author_id_will_change!: () -> void

      def author_id_was: () -> Integer?

      def author_id_previously_changed?: () -> bool

      def author_id_previous_change: () -> Array[Integer?]?

      def author_id_previously_was: () -> Integer?

      def author_id_before_last_save: () -> Integer?

      def author_id_change_to_be_saved: () -> Array[Integer?]?

      def author_id_in_database: () -> Integer?

      def saved_change_to_author_id: () -> Array[Integer?]?

      def saved_change_to_author_id?: () -> bool

      def will_save_change_to_author_id?: () -> bool

      def restore_author_id!: () -> void

      def clear_author_id_change: () -> void

      def author_type: () -> String?

      def author_type=: (String?) -> String?

      def author_type?: () -> bool

      def author_type_changed?: () -> bool

      def author_type_change: () -> [ String?, String? ]

      def author_type_will_change!: () -> void

      def author_type_was: () -> String?

      def author_type_previously_changed?: () -> bool

      def author_type_previous_change: () -> Array[String?]?

      def author_type_previously_was: () -> String?

      def author_type_before_last_save: () -> String?

      def author_type_change_to_be_saved: () -> Array[String?]?

      def author_type_in_database: () -> String?

      def saved_change_to_author_type: () -> Array[String?]?

      def saved_change_to_author_type?: () -> bool

      def will_save_change_to_author_type?: () -> bool

      def restore_author_type!: () -> void

      def clear_author_type_change: () -> void

      def record_id: () -> String

      def record_id=: (String) -> String

      def record_id?: () -> bool

      def record_id_changed?: () -> bool

      def record_id_change: () -> [ String?, String? ]

      def record_id_will_change!: () -> void

      def record_id_was: () -> String?

      def record_id_previously_changed?: () -> bool

      def record_id_previous_change: () -> Array[String?]?

      def record_id_previously_was: () -> String?

      def record_id_before_last_save: () -> String?

      def record_id_change_to_be_saved: () -> Array[String?]?

      def record_id_in_database: () -> String?

      def saved_change_to_record_id: () -> Array[String?]?

      def saved_change_to_record_id?: () -> bool

      def will_save_change_to_record_id?: () -> bool

      def restore_record_id!: () -> void

      def clear_record_id_change: () -> void

      def record_type: () -> String

      def record_type=: (String) -> String

      def record_type?: () -> bool

      def record_type_changed?: () -> bool

      def record_type_change: () -> [ String?, String? ]

      def record_type_will_change!: () -> void

      def record_type_was: () -> String?

      def record_type_previously_changed?: () -> bool

      def record_type_previous_change: () -> Array[String?]?

      def record_type_previously_was: () -> String?

      def record_type_before_last_save: () -> String?

      def record_type_change_to_be_saved: () -> Array[String?]?

      def record_type_in_database: () -> String?

      def saved_change_to_record_type: () -> Array[String?]?

      def saved_change_to_record_type?: () -> bool

      def will_save_change_to_record_type?: () -> bool

      def restore_record_type!: () -> void

      def clear_record_type_change: () -> void

      def deleted_at: () -> ActiveSupport::TimeWithZone?

      def deleted_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

      def deleted_at?: () -> bool

      def deleted_at_changed?: () -> bool

      def deleted_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def deleted_at_will_change!: () -> void

      def deleted_at_was: () -> ActiveSupport::TimeWithZone?

      def deleted_at_previously_changed?: () -> bool

      def deleted_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def deleted_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def deleted_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def deleted_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def deleted_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_deleted_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_deleted_at?: () -> bool

      def will_save_change_to_deleted_at?: () -> bool

      def restore_deleted_at!: () -> void

      def clear_deleted_at_change: () -> void

      def created_at: () -> ActiveSupport::TimeWithZone

      def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def created_at?: () -> bool

      def created_at_changed?: () -> bool

      def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def created_at_will_change!: () -> void

      def created_at_was: () -> ActiveSupport::TimeWithZone?

      def created_at_previously_changed?: () -> bool

      def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_created_at?: () -> bool

      def will_save_change_to_created_at?: () -> bool

      def restore_created_at!: () -> void

      def clear_created_at_change: () -> void

      def updated_at: () -> ActiveSupport::TimeWithZone

      def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def updated_at?: () -> bool

      def updated_at_changed?: () -> bool

      def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def updated_at_will_change!: () -> void

      def updated_at_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_previously_changed?: () -> bool

      def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_updated_at?: () -> bool

      def will_save_change_to_updated_at?: () -> bool

      def restore_updated_at!: () -> void

      def clear_updated_at_change: () -> void
    end
    include GeneratedAttributeMethods
    def audits: () -> Motor::Audit::ActiveRecord_Associations_CollectionProxy
    def audits=: (Motor::Audit::ActiveRecord_Associations_CollectionProxy | Array[Motor::Audit]) -> (Motor::Audit::ActiveRecord_Associations_CollectionProxy | Array[Motor::Audit])
    def audit_ids: () -> Array[Integer]
    def audit_ids=: (Array[Integer]) -> Array[Integer]
    def note_tag_tags: () -> Motor::NoteTagTag::ActiveRecord_Associations_CollectionProxy
    def note_tag_tags=: (Motor::NoteTagTag::ActiveRecord_Associations_CollectionProxy | Array[Motor::NoteTagTag]) -> (Motor::NoteTagTag::ActiveRecord_Associations_CollectionProxy | Array[Motor::NoteTagTag])
    def note_tag_tag_ids: () -> Array[Integer]
    def note_tag_tag_ids=: (Array[Integer]) -> Array[Integer]
    def tags: () -> Motor::NoteTag::ActiveRecord_Associations_CollectionProxy
    def tags=: (Motor::NoteTag::ActiveRecord_Associations_CollectionProxy | Array[Motor::NoteTag]) -> (Motor::NoteTag::ActiveRecord_Associations_CollectionProxy | Array[Motor::NoteTag])
    def tag_ids: () -> Array[Integer]
    def tag_ids=: (Array[Integer]) -> Array[Integer]
    def reminders: () -> Motor::Reminder::ActiveRecord_Associations_CollectionProxy
    def reminders=: (Motor::Reminder::ActiveRecord_Associations_CollectionProxy | Array[Motor::Reminder]) -> (Motor::Reminder::ActiveRecord_Associations_CollectionProxy | Array[Motor::Reminder])
    def reminder_ids: () -> Array[Integer]
    def reminder_ids=: (Array[Integer]) -> Array[Integer]
    def notifications: () -> Motor::Notification::ActiveRecord_Associations_CollectionProxy
    def notifications=: (Motor::Notification::ActiveRecord_Associations_CollectionProxy | Array[Motor::Notification]) -> (Motor::Notification::ActiveRecord_Associations_CollectionProxy | Array[Motor::Notification])
    def notification_ids: () -> Array[Integer]
    def notification_ids=: (Array[Integer]) -> Array[Integer]

    def author: () -> untyped?
    def author=: (untyped?) -> untyped?
    def reload_author: () -> untyped?
    def record: () -> untyped
    def record=: (untyped?) -> untyped?
    def reload_record: () -> untyped?
    module GeneratedAssociationMethods
    end
    include GeneratedAssociationMethods

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Motor::Note, Integer]
      include Enumerable[Motor::Note]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Motor::Note, Integer]
    end
  end
end
