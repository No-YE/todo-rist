module Motor
  class TaggableTag < ::Motor::ApplicationRecord
    extend _ActiveRecord_Relation_ClassMethods[Motor::TaggableTag, ActiveRecord_Relation, Integer]

    module GeneratedAttributeMethods
      def id: () -> Integer

      def id=: (Integer) -> Integer

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ Integer?, Integer? ]

      def id_will_change!: () -> void

      def id_was: () -> Integer?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> Array[Integer?]?

      def id_previously_was: () -> Integer?

      def id_before_last_save: () -> Integer?

      def id_change_to_be_saved: () -> Array[Integer?]?

      def id_in_database: () -> Integer?

      def saved_change_to_id: () -> Array[Integer?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def tag_id: () -> Integer

      def tag_id=: (Integer) -> Integer

      def tag_id?: () -> bool

      def tag_id_changed?: () -> bool

      def tag_id_change: () -> [ Integer?, Integer? ]

      def tag_id_will_change!: () -> void

      def tag_id_was: () -> Integer?

      def tag_id_previously_changed?: () -> bool

      def tag_id_previous_change: () -> Array[Integer?]?

      def tag_id_previously_was: () -> Integer?

      def tag_id_before_last_save: () -> Integer?

      def tag_id_change_to_be_saved: () -> Array[Integer?]?

      def tag_id_in_database: () -> Integer?

      def saved_change_to_tag_id: () -> Array[Integer?]?

      def saved_change_to_tag_id?: () -> bool

      def will_save_change_to_tag_id?: () -> bool

      def restore_tag_id!: () -> void

      def clear_tag_id_change: () -> void

      def taggable_id: () -> Integer

      def taggable_id=: (Integer) -> Integer

      def taggable_id?: () -> bool

      def taggable_id_changed?: () -> bool

      def taggable_id_change: () -> [ Integer?, Integer? ]

      def taggable_id_will_change!: () -> void

      def taggable_id_was: () -> Integer?

      def taggable_id_previously_changed?: () -> bool

      def taggable_id_previous_change: () -> Array[Integer?]?

      def taggable_id_previously_was: () -> Integer?

      def taggable_id_before_last_save: () -> Integer?

      def taggable_id_change_to_be_saved: () -> Array[Integer?]?

      def taggable_id_in_database: () -> Integer?

      def saved_change_to_taggable_id: () -> Array[Integer?]?

      def saved_change_to_taggable_id?: () -> bool

      def will_save_change_to_taggable_id?: () -> bool

      def restore_taggable_id!: () -> void

      def clear_taggable_id_change: () -> void

      def taggable_type: () -> String

      def taggable_type=: (String) -> String

      def taggable_type?: () -> bool

      def taggable_type_changed?: () -> bool

      def taggable_type_change: () -> [ String?, String? ]

      def taggable_type_will_change!: () -> void

      def taggable_type_was: () -> String?

      def taggable_type_previously_changed?: () -> bool

      def taggable_type_previous_change: () -> Array[String?]?

      def taggable_type_previously_was: () -> String?

      def taggable_type_before_last_save: () -> String?

      def taggable_type_change_to_be_saved: () -> Array[String?]?

      def taggable_type_in_database: () -> String?

      def saved_change_to_taggable_type: () -> Array[String?]?

      def saved_change_to_taggable_type?: () -> bool

      def will_save_change_to_taggable_type?: () -> bool

      def restore_taggable_type!: () -> void

      def clear_taggable_type_change: () -> void
    end
    include GeneratedAttributeMethods

    def tag: () -> Motor::Tag
    def tag=: (Motor::Tag?) -> Motor::Tag?
    def reload_tag: () -> Motor::Tag?
    def build_tag: (untyped) -> Motor::Tag
    def create_tag: (untyped) -> Motor::Tag
    def create_tag!: (untyped) -> Motor::Tag
    def taggable: () -> untyped
    def taggable=: (untyped?) -> untyped?
    def reload_taggable: () -> untyped?
    module GeneratedAssociationMethods
    end
    include GeneratedAssociationMethods

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Motor::TaggableTag, Integer]
      include Enumerable[Motor::TaggableTag]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Motor::TaggableTag, Integer]
    end
  end
end
