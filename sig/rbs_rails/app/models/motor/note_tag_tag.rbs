module Motor
  class NoteTagTag < ::Motor::ApplicationRecord
    extend _ActiveRecord_Relation_ClassMethods[Motor::NoteTagTag, ActiveRecord_Relation, Integer]

    module GeneratedAttributeMethods
      def id: () -> Integer

      def id=: (Integer) -> Integer

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ Integer?, Integer? ]

      def id_will_change!: () -> void

      def id_was: () -> Integer?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> Array[Integer?]?

      def id_previously_was: () -> Integer?

      def id_before_last_save: () -> Integer?

      def id_change_to_be_saved: () -> Array[Integer?]?

      def id_in_database: () -> Integer?

      def saved_change_to_id: () -> Array[Integer?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def tag_id: () -> Integer

      def tag_id=: (Integer) -> Integer

      def tag_id?: () -> bool

      def tag_id_changed?: () -> bool

      def tag_id_change: () -> [ Integer?, Integer? ]

      def tag_id_will_change!: () -> void

      def tag_id_was: () -> Integer?

      def tag_id_previously_changed?: () -> bool

      def tag_id_previous_change: () -> Array[Integer?]?

      def tag_id_previously_was: () -> Integer?

      def tag_id_before_last_save: () -> Integer?

      def tag_id_change_to_be_saved: () -> Array[Integer?]?

      def tag_id_in_database: () -> Integer?

      def saved_change_to_tag_id: () -> Array[Integer?]?

      def saved_change_to_tag_id?: () -> bool

      def will_save_change_to_tag_id?: () -> bool

      def restore_tag_id!: () -> void

      def clear_tag_id_change: () -> void

      def note_id: () -> Integer

      def note_id=: (Integer) -> Integer

      def note_id?: () -> bool

      def note_id_changed?: () -> bool

      def note_id_change: () -> [ Integer?, Integer? ]

      def note_id_will_change!: () -> void

      def note_id_was: () -> Integer?

      def note_id_previously_changed?: () -> bool

      def note_id_previous_change: () -> Array[Integer?]?

      def note_id_previously_was: () -> Integer?

      def note_id_before_last_save: () -> Integer?

      def note_id_change_to_be_saved: () -> Array[Integer?]?

      def note_id_in_database: () -> Integer?

      def saved_change_to_note_id: () -> Array[Integer?]?

      def saved_change_to_note_id?: () -> bool

      def will_save_change_to_note_id?: () -> bool

      def restore_note_id!: () -> void

      def clear_note_id_change: () -> void
    end
    include GeneratedAttributeMethods

    def tag: () -> Motor::NoteTag
    def tag=: (Motor::NoteTag?) -> Motor::NoteTag?
    def reload_tag: () -> Motor::NoteTag?
    def build_tag: (untyped) -> Motor::NoteTag
    def create_tag: (untyped) -> Motor::NoteTag
    def create_tag!: (untyped) -> Motor::NoteTag
    def note: () -> Motor::Note
    def note=: (Motor::Note?) -> Motor::Note?
    def reload_note: () -> Motor::Note?
    def build_note: (untyped) -> Motor::Note
    def create_note: (untyped) -> Motor::Note
    def create_note!: (untyped) -> Motor::Note
    module GeneratedAssociationMethods
    end
    include GeneratedAssociationMethods

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Motor::NoteTagTag, Integer]
      include Enumerable[Motor::NoteTagTag]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Motor::NoteTagTag, Integer]
    end
  end
end
